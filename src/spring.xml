<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<!-- just a bean -->

	<!-- autowiring by name -->
	<!-- <bean id="triangle" class="org.stuff.Triangle" autowire="byName"> -->


	<!-- autowiring by type -->
	<!-- <bean id="triangle" class="org.stuff.Triangle" autowire="byType"> -->

	<!-- autowiring by constructor -->
	<!-- <bean id="triangle" class="org.stuff.Triangle" autowire="byConstructor"> -->

	<!-- <property name="points"> <list> <ref bean="zeroPoint"></ref> <ref bean="Point2"></ref> 
		<ref bean="Point3"></ref> </list> </property> -->
	<!-- <property name="pointA"> working with ref location <ref local="zeroPoint" 
		/> </property> <property name="pointB"> example of an inner bean <bean id="point2" 
		class="org.stuff.Point"> <property name="x" value="-20" /> <property name="y" 
		value="0" /> </bean> </property> <property name="pointC"> example of an inner 
		bean <bean id="point3" class="org.stuff.Point"> <property name="x" value="0" 
		/> <property name="y" value="-20" /> </bean> </property> -->

	<!-- Testing how initialization and destroy methods are working in a lifecycle 
		of bean -->
	<!-- <bean id="triangleBeanPostProcessor" class="org.stuff.Triangle"> <property 
		name="pointA" ref="pointA"></property> <property name="pointB" ref="pointB"></property> 
		<property name="pointC" ref="pointC"></property> </bean> -->

	<!-- Testing how interfaces in Spring are working -->
	<bean id="triangleInterface" class="org.stuff.Triangle">
		<property name="pointA" ref="pointA"></property>
		<property name="pointB" ref="pointB"></property>
		<property name="pointC" ref="pointC"></property>
	</bean>

	<!-- <bean id="triangleTest" class="org.stuff.Triangle" init-method="myInit" 
		destroy-method="cleanUp"> <property name="pointA" ref="pointA"></property> 
		<property name="pointB" ref="pointB"></property> <property name="pointC" 
		ref="pointC"></property> </bean> -->

	<!-- creating new bean for bean inheritance test -->
	<!-- <bean id="parenttriangle" class="org.stuff.Triangle"> <property name="pointA" 
		ref="pointA" /> </bean> -->

	<!-- this bean will inherit from parenttriangle bean -->
	<!-- <bean id="triangle1" class="org.stuff.Triangle" parent="parenttriangle"> 
		<property name="pointB" ref="pointB" /> <property name="pointC" ref="pointC" 
		/> </bean> -->

	<!-- this bean will also inherit from parent triangle bean -->
	<!-- <bean id="triangle2" class="org.stuff.Triangle" parent="parenttriangle"> 
		<property name="pointB" ref="pointB" /> </bean> -->

	<!-- this bean will be a parent bean with a list -->
	<!-- <bean id="parentlisttriangle" class="org.stuff.Triangle" abstract="true"> 
		<property name="points"> <list> <ref bean="pointA" /> </list> </property> 
		</bean> -->


	<!-- this bean will do bean inheritance but with a list -->
	<!-- <bean id="triangle3" class="org.stuff.Triangle" parent="parentlisttriangle"> 
		<property name="points"> merging a list. not sure why marked as an waring 
		(or error) though, compiles with no problem. will check it later <list merge="true"> 
		<ref bean="pointB" /> <ref bean="pointC" /> </list> </property> </bean> -->


	<!-- lower case letter are VERY important in String -->
	<bean id="pointA" class="org.stuff.Point">
		<!-- We are setting values from .properties file -->
		<!-- <property name="x" value="${pointA.pointX}" /> -->
		<!-- <property name="y" value="${pointA.pointY}" /> -->
		<property name="x" value="0" />
		<property name="y" value="0" />
	</bean>
	<bean id="pointB" class="org.stuff.Point">
		<property name="x" value="-20" />
		<property name="y" value="0" />
	</bean>
	<bean id="pointC" class="org.stuff.Point">
		<property name="x" value="20" />
		<property name="y" value="0" />
	</bean>
	<!-- aliases example -->
	<!-- <alias name="triangle" alias="triangle-alias" /> -->

	<!-- Using bean factory processor -->
	<!-- <bean class="org.stuff.MyBeanFactoryPP" /> -->

	<!-- Adding pointsconfig.properties file -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="pointsconfig.properties"></property>
	</bean>

	<!-- Writing another class to test interfaces in Spring -->
	<bean id="circle" class="org.stuff.Circle">

		<!-- Commenting this part for required annotation test -->
		<!-- <property name="center" ref="pointA"></property> -->

	</bean>

	<!-- Testing required annotations in Spring -->
	<bean
		class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />

	<!-- Using bean post processor -->
	<!-- <bean class="org.stuff.DisplayNameBeanPostProcessor" /> -->

</beans>